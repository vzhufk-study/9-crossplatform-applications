//---------------------------------------------------------------------------

#include <vcl.h>

#include <regex>

#include <string>

#pragma hdrstop

#include "RegExpMemo.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
// ValidCtrCheck is used to assure that the components created do not have
// any pure virtual functions.
//

static inline void ValidCtrCheck(RegExpMemo *)
{
	new RegExpMemo(NULL);
}
//---------------------------------------------------------------------------
__fastcall RegExpMemo::RegExpMemo(TComponent* Owner)
	: TMemo(Owner)
{

}
//---------------------------------------------------------------------------
namespace Regexpmemo
{
	void __fastcall PACKAGE Register()
	{
		TComponentClass classes[1] = {__classid(RegExpMemo)};
		RegisterComponents(L"Samples", classes, 0);
	}
}
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
void __fastcall RegExpMemo::WriteSearchStart(int value){
	this->start = value;
}

void __fastcall RegExpMemo::WritePattern (String value){
	this->pattern = value;
}

void __fastcall RegExpMemo::WriteColor (Color value){
	this->select = value;
}

void __fastcall RegExpMemo::Run(){
	std::string text = this->Text.c_str();
	std::regex pattern = std::regex(this->pattern.c_str());

	std::smatch m;

	std::regex_search (text, pattern, std::regex_constants::match_default, this->start);

	for (auto x:m) std::cout << x << " ";
	std::cout << std::endl;
    s = m.suffix().str();
  }
}
